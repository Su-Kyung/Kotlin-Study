Null Safety
-> Null 에 대해서 안전하다
-> 코틀린의 특징

Null vs 0
-> 0 : 휴지를 다 쓰고 휴지심만 남은 상태
-> Null : 휴지심도 없는 상태, 존재하지 않는 상태, 모르는 상태 (즉, 관리할 수 없는 상태)

Null 이 안전하지 않은 이유
-> 0 + 10 = 10
-> Null + 10 = ?
-> button.setOnClickListener
-> null.setONClickListener -> Error!
-> NullPointExceptionError 발생

// java style
if (number != null) {
    number += 10
}

if (button != null) {
    button.setOnClickListener
}


코틀린이 Null Safety 하기 위해 사용하는 문법
-> ? : Null 이 아니라면 이하 구문 실행
-> !! : Null 이 아님을 개발자가 보장한다 (100% 확신하는건 위험하니 사용을 지양하자)

button?.setOnClickListener
button!!.setONClickListener


Null 이 될 수 있는 타입
Int, Double, Float, Class -> Null 이 될 수 없는 타입
Int?, Double?, Float?, Class? -> Null 이 될 수 있는 타입